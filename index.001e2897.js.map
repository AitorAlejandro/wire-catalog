{"mappings":"AAGO,MAAMA,UCAN,QDCLC,WACE,OAAOC,KAAKC,UAGdC,gBACE,MAAMC,QAA+BC,MACnC,mEAEIC,EAAQF,EAAaG,SAAWH,EAAaI,OAAS,GAE5D,OADAC,QAAQC,IAAI,cAAeJ,GACpBA,GEZJ,MAAMK,EACXC,eAEE,OADY,IAAID,EAOlBE,SAC2B,IAAId,GACZC,WANnBc,cACEL,QAAQC,IAAI,oBCNJC,EAAII,QACZF","sources":["src/RemoteWireDataRetriever.ts","src/WireDataReceiver.ts","src/App.ts","src/index.ts"],"sourcesContent":["import { Wire } from \"./domain/Wire\";\nimport { WireDataRetriever } from \"./WireDataReceiver\";\n\nexport class RemoteWireDataRetriever extends WireDataRetriever {\n  public retrieve(): Promise<Wire[]> {\n    return this.getData();\n  }\n\n  private async getData(): Promise<Wire[]> {\n    const wireResponse: Response = await fetch(\n      \"https://aitoralejandro.github.io/wire-catalog/assets/wires.json\"\n    );\n    const wires = wireResponse.ok ? await wireResponse.json() : [];\n    console.log('wires >>>> ', wires);\n    return wires;\n  }\n}","import { IWireDataRetriever } from \"./IWireDataRetriever\";\nimport { Wire } from \"./domain/Wire\";\n\nexport abstract class WireDataRetriever implements IWireDataRetriever {\n  abstract retrieve(): Promise<Wire[]>;\n}","import { RemoteWireDataRetriever } from \"./RemoteWireDataRetriever\";\n\nexport class App {\n  static Build(): App {\n    const app = new App();\n    return app;\n  }\n  private constructor() {\n    console.log('App constructor')\n  }\n\n  start() {\n    const wireDataReceiver = new RemoteWireDataRetriever();\n    wireDataReceiver.retrieve();\n  }\n}","import { App } from './App';\n\nconst app = App.Build();\napp.start();\n"],"names":["$a6bd0a3ed3393bc8$export$7c90e743f636653f","retrieve","this","getData","async","wireResponse","fetch","wires","ok","json","console","log","$f7d9e0786a92bdae$export$86fbec116b87613f","static","start","constructor","Build"],"version":3,"file":"index.001e2897.js.map"}